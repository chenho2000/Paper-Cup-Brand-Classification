services:
  fastapi:
    build: .
    container_name: fastapi_app
    ports:
      - "8000:8000"
    restart: unless-stopped
    volumes:
      - ./offline_batch_results.txt:/app/offline_batch_results.txt
      - ./prediction_log.json:/app/prediction_log.json

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus_dev.yml:/etc/prometheus/prometheus.yml
      - ./recording_rules.yml:/etc/prometheus/recording_rules.yml
    ports:
      - "9090:9090"
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    environment:
      - GF_INSTALL_PLUGINS=yesoreyeram-infinity-datasource
    volumes:
      # Provisioning configs
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/alerting:/etc/grafana/provisioning/alerting
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      # Dashboard JSONs
      - ./grafana/provisioning/dashboards:/var/lib/grafana/dashboards
